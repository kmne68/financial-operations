/*
 * FinancialsView.java
 *
 * @author Keith Emery
 * IS 287
 * Spring, 2017
 * Instructor P. Daniel
 * Assignment 4
 */

package financials;

import business.Annuity;
import business.Financial;
import business.Loan;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 * The application's main frame.
 */
public class FinancialsView extends FrameView {
    
    private Financial financeObject;
    
    public FinancialsView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = FinancialsApp.getApplication().getMainFrame();
            aboutBox = new FinancialsAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        FinancialsApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        lbl_amount = new javax.swing.JLabel();
        txt_amount = new javax.swing.JTextField();
        lbl_annualRate = new javax.swing.JLabel();
        txt_rate = new javax.swing.JTextField();
        lbl_term = new javax.swing.JLabel();
        txt_term = new javax.swing.JTextField();
        lbl_financialOperation = new javax.swing.JLabel();
        lbl_result = new javax.swing.JLabel();
        txt_result = new javax.swing.JTextField();
        rdo_annuity = new javax.swing.JRadioButton();
        rdo_loan = new javax.swing.JRadioButton();
        btn_calculate = new javax.swing.JButton();
        btn_schedule = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        functionGroup = new javax.swing.ButtonGroup();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(FinancialsView.class);
        lbl_amount.setText(resourceMap.getString("lbl_amount.text")); // NOI18N
        lbl_amount.setName("lbl_amount"); // NOI18N

        txt_amount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_amount.setToolTipText(resourceMap.getString("txt_amount.toolTipText")); // NOI18N
        txt_amount.setName("txt_amount"); // NOI18N

        lbl_annualRate.setFont(resourceMap.getFont("lbl_annualRate.font")); // NOI18N
        lbl_annualRate.setText(resourceMap.getString("lbl_annualRate.text")); // NOI18N
        lbl_annualRate.setName("lbl_annualRate"); // NOI18N

        txt_rate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_rate.setToolTipText(resourceMap.getString("txt_rate.toolTipText")); // NOI18N
        txt_rate.setName("txt_rate"); // NOI18N

        lbl_term.setText(resourceMap.getString("lbl_term.text")); // NOI18N
        lbl_term.setName("lbl_term"); // NOI18N

        txt_term.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_term.setToolTipText(resourceMap.getString("txt_term.toolTipText")); // NOI18N
        txt_term.setName("txt_term"); // NOI18N

        lbl_financialOperation.setText(resourceMap.getString("lbl_financialOperation.text")); // NOI18N
        lbl_financialOperation.setName("lbl_financialOperation"); // NOI18N

        lbl_result.setText(resourceMap.getString("lbl_result.text")); // NOI18N
        lbl_result.setName("lbl_result"); // NOI18N

        txt_result.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_result.setToolTipText(resourceMap.getString("txt_result.toolTipText")); // NOI18N
        txt_result.setName("txt_result"); // NOI18N

        functionGroup.add(rdo_annuity);
        rdo_annuity.setFont(resourceMap.getFont("rdo_annuity.font")); // NOI18N
        rdo_annuity.setText(resourceMap.getString("rdo_annuity.text")); // NOI18N
        rdo_annuity.setName("rdo_annuity"); // NOI18N
        rdo_annuity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdo_annuityItemStateChanged(evt);
            }
        });

        functionGroup.add(rdo_loan);
        rdo_loan.setFont(resourceMap.getFont("rdo_loan.font")); // NOI18N
        rdo_loan.setText(resourceMap.getString("rdo_loan.text")); // NOI18N
        rdo_loan.setName("rdo_loan"); // NOI18N
        rdo_loan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdo_loanItemStateChanged(evt);
            }
        });

        btn_calculate.setText(resourceMap.getString("btn_calculate.text")); // NOI18N
        btn_calculate.setName("btn_calculate"); // NOI18N
        btn_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calculateActionPerformed(evt);
            }
        });

        btn_schedule.setText(resourceMap.getString("btn_schedule.text")); // NOI18N
        btn_schedule.setEnabled(false);
        btn_schedule.setName("btn_schedule"); // NOI18N
        btn_schedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_scheduleActionPerformed(evt);
            }
        });

        btn_clear.setText(resourceMap.getString("btn_clear.text")); // NOI18N
        btn_clear.setName("btn_clear"); // NOI18N
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_calculate)
                .addGap(149, 149, 149))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_annualRate, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_term, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_financialOperation))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_result, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(btn_schedule)
                        .addGap(49, 49, 49)
                        .addComponent(btn_clear))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_result, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(rdo_annuity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdo_loan))
                            .addComponent(txt_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_term, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_financialOperation)
                    .addComponent(rdo_annuity)
                    .addComponent(rdo_loan))
                .addGap(31, 31, 31)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_amount)
                    .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_annualRate)
                    .addComponent(txt_rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_term)
                    .addComponent(txt_term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_calculate)
                .addGap(33, 33, 33)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_result))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_schedule)
                    .addComponent(btn_clear))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(FinancialsView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 366, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void rdo_annuityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdo_annuityItemStateChanged
        if(rdo_annuity.isSelected()) {
            lbl_amount.setText(Annuity.AMOUNTDESCRIPTION + ":");
            lbl_result.setText(Annuity.RESULTDESCRIPTION + ":");
            
        }
    }//GEN-LAST:event_rdo_annuityItemStateChanged

    private void rdo_loanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdo_loanItemStateChanged
        if(rdo_loan.isSelected()) {
            lbl_amount.setText(Loan.AMOUNTDESCRIPTION + ":");
            lbl_result.setText(Loan.RESULTDESCRIPTION + ":");
            financeObject = new Loan();
        }
    }//GEN-LAST:event_rdo_loanItemStateChanged

    private void btn_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calculateActionPerformed
        
        NumberFormat currency = NumberFormat.getCurrencyInstance();
        
        double amount;
        double rate;
        int term;        
        
        try {
            amount = Double.parseDouble(txt_amount.getText());
        } catch (NumberFormatException e) {
            statusMessageLabel.setText("Amount field error: " + e.getMessage());
            txt_amount.requestFocusInWindow();
            return;
        }
        
        try {
            rate = Double.parseDouble(txt_rate.getText());
        } catch(NumberFormatException e) {
            statusMessageLabel.setText("Rate field error: " + e.getMessage());
            txt_rate.requestFocusInWindow();
            return;
        }
        
        try {
            term = Integer.parseInt(txt_term.getText());
        } catch (NumberFormatException e) {
            statusMessageLabel.setText("Term value field error: " + e.getMessage());
            txt_term.requestFocusInWindow();
            return;
        }
        
        if(rdo_annuity.isSelected()) {            
            financeObject = new Annuity(amount, rate, term);
        } else if (rdo_loan.isSelected()) {
            financeObject = new Loan(amount, rate, term);
        } else {
            statusMessageLabel.setText("Unknown financial object type.");
            return;
        }
        txt_result.setText(currency.format(financeObject.getResult()));
        btn_schedule.setEnabled(true);
        
        if(!financeObject.getErrorMessage().isEmpty()) {
            statusMessageLabel.setText(financeObject.getErrorMessage());
        }
    }//GEN-LAST:event_btn_calculateActionPerformed

    
    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // Clear the form
        statusMessageLabel.setText("");
        txt_amount.setText("");
        txt_rate.setText("");
        txt_term.setText("");
        txt_result.setText("");
        
        functionGroup.clearSelection();
        btn_schedule.setEnabled(false);
        lbl_amount.setText("Amount");
        lbl_result.setText("Result");
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_scheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_scheduleActionPerformed
        
        String[] columnNames;
        String[][] tableValues;
        
        if(financeObject instanceof Annuity) {
     //       columnNames = new String[] {"Month", "Initial Annuity Value", "Deposit", "Interest Earned", "Ending Annuity Value"};
            columnNames = new String[] {"Month", Annuity.BEGINNINGBALANCEDESCRIPTION, Annuity.PRINCIPLEFACTORDESCRIPTION,
                Annuity.INTERESTFACTORDESCRIPTION, Annuity.ENDINGBALANCEDESCRIPTION};
    // "month", Annuity.BegBal, Annuity.Printfacotr, Annuity.intfactodesc, annuity.endbaldesc);
           // tableValues = new String[financeObject.getTerm()][5]; 
        } else if (financeObject instanceof Loan) {
            columnNames = new String[] {"Month", Loan.BEGINNINGBALANCEDESCRIPTION,  Loan.RESULTDESCRIPTION, Loan.INTERESTFACTORDESCRIPTION, Loan.ENDINGBALANCEDESCRIPTION, Loan.PRINCIPLEPAIDDESCRIPTION };
            // "Initial Loan Balance","Payment","Interest Charged","Ending Loan Balance","Principle Paid"
            //    tableValues = new String[financeObject.getTerm()][6]; 
        } else {
            statusMessageLabel.setText("Unknown financial operation.");
            return;
        }
        
        statusMessageLabel.setText("");
        NumberFormat currency = NumberFormat.getCurrencyInstance();
   //     tbl_schedule.setName(null);
        tableValues = new String[financeObject.getTerm()][columnNames.length];
        
        DefaultTableModel model;         
        model = new DefaultTableModel(tableValues, columnNames);
        JTable tbl_schedule;        
        tbl_schedule = new JTable(model);
        DefaultTableCellRenderer scheduleTableRenderer = (DefaultTableCellRenderer) tbl_schedule.getDefaultRenderer(Object.class);
        scheduleTableRenderer.setHorizontalAlignment(JLabel.RIGHT);
        tbl_schedule.setDefaultRenderer(Object.class, scheduleTableRenderer); // added
        
        // fill table cells here
        for(int year = 1; year <= financeObject.getTerm(); year++) {
            
            tbl_schedule.setValueAt(year, year - 1, 0);
            tbl_schedule.setValueAt(currency.format(financeObject.getBeginningBalance(year)), year - 1, 1);
            tbl_schedule.setValueAt(currency.format(financeObject.getPrincipleFactor()), year - 1, 2);
            tbl_schedule.setValueAt(currency.format(financeObject.getInterestFactor(year)), year - 1, 3);
            tbl_schedule.setValueAt(currency.format(financeObject.getEndingBalance(year)), year - 1, 4);

            if(financeObject instanceof Loan) {
                Loan loan = (Loan) financeObject;
                tbl_schedule.setValueAt(currency.format(loan.getPrinciplePaid(year)), year - 1, 5);
                
            }
        }
        
        
        JScrollPane scrollPane = new JScrollPane(tbl_schedule);
        JDialog dg = new JDialog();
        dg.add(scrollPane);
        dg.setTitle(financeObject.getTableTitle() + " schedule");
        dg.setBounds(150, 400, 600, 300);
        dg.setVisible(true);
        
      //  tbl_schedule.setModel(model);
        // class needs to tell the super class what its title is
        // create columns and table (using instanceof, not rdo_buttons)
        
        
    }//GEN-LAST:event_btn_scheduleActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_calculate;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_schedule;
    private javax.swing.ButtonGroup functionGroup;
    private javax.swing.JLabel lbl_amount;
    private javax.swing.JLabel lbl_annualRate;
    private javax.swing.JLabel lbl_financialOperation;
    private javax.swing.JLabel lbl_result;
    private javax.swing.JLabel lbl_term;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JRadioButton rdo_annuity;
    private javax.swing.JRadioButton rdo_loan;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTextField txt_amount;
    private javax.swing.JTextField txt_rate;
    private javax.swing.JTextField txt_result;
    private javax.swing.JTextField txt_term;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
